import {FindConditions} from "typeorm";
import {Observable, from} from "rxjs";
import {mergeMap} from "rxjs/operators";
import {Controller} from "@nestjs/common";
import {MessagePattern, Payload} from "@nestjs/microservices";

import {WorkerService} from "./worker.service";
import {WorkerEntity} from "./worker.entity";


@Controller()
export class WorkerController {
  constructor(private readonly workerService: WorkerService) {}

  @MessagePattern("GET_RESULT")
  public getResult(@Payload() payload: FindConditions<WorkerEntity>): Observable<WorkerEntity> {
    return from(this.workerService.getResult(payload)).pipe(mergeMap(e => e));
  }
}
